<?xml version='1.0' encoding='utf-8' ?>

<workbook source-platform='win' version='8.3' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <!-- build 8200.14.1117.2110                                -->
  <preferences>
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (death_codes.csv)' inline='true' name='excel-direct.42135.972489050924' version='8.3'>
      <connection class='excel-direct' cleaning='no' compat='no' filename='C:\Users\henryzhao\Documents\DataVisualization\DV_FinalProject\death_codes.csv.xlsx'>
        <relation name='Sheet1$' table='[Sheet1$]' type='table'>
          <columns header='yes'>
            <column datatype='string' name='Abbrev' ordinal='0' />
            <column datatype='string' name='Label' ordinal='1' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Abbrev</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Abbrev]</local-name>
            <parent-name>[Sheet1$]</parent-name>
            <remote-alias>Abbrev</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Label</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Label]</local-name>
            <parent-name>[Sheet1$]</parent-name>
            <remote-alias>Label</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[Sheet1$]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
    <datasource caption='deaths (deaths)' inline='true' name='excel-direct.42135.972832893516' version='8.3'>
      <connection class='excel-direct' cleaning='no' compat='no' filename='C:\Users\henryzhao\Documents\DataVisualization\DV_FinalProject\deaths.xlsx'>
        <relation name='deaths$' table='[deaths$]' type='table'>
          <columns header='yes'>
            <column datatype='integer' name='zip_code' ordinal='0' />
            <column datatype='string' name='variable' ordinal='1' />
            <column datatype='integer' name='value' ordinal='2' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>zip_code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[zip_code]</local-name>
            <parent-name>[deaths$]</parent-name>
            <remote-alias>zip_code</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>variable</remote-name>
            <remote-type>130</remote-type>
            <local-name>[variable]</local-name>
            <parent-name>[deaths$]</parent-name>
            <remote-alias>variable</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>value</remote-name>
            <remote-type>20</remote-type>
            <local-name>[value]</local-name>
            <parent-name>[deaths$]</parent-name>
            <remote-alias>value</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name></remote-name>
            <remote-type>0</remote-type>
            <parent-name>[deaths$]</parent-name>
            <remote-alias></remote-alias>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>2</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column caption='Value' datatype='integer' name='[value]' role='measure' type='quantitative'>
      </column>
      <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal'>
      </column>
      <column caption='Zip Code' datatype='integer' default-format='*00000' name='[zip_code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal'>
      </column>
      <layout dim-ordering='alphabetic' dim-percentage='0.5' measure-ordering='alphabetic' measure-percentage='0.4' show-structure='true' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
    </datasource>
  </datasources>
  <datasource-relationships>
    <datasource-dependencies datasource='excel-direct.42135.972489050924'>
      <column datatype='string' name='[Abbrev]' role='dimension' type='nominal'>
      </column>
      <column-instance column='[Abbrev]' derivation='None' name='[none:Abbrev:nk]' pivot='key' type='nominal' />
    </datasource-dependencies>
    <datasource-dependencies datasource='excel-direct.42135.972832893516'>
      <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
      <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal'>
      </column>
    </datasource-dependencies>
    <datasource-relationship source='excel-direct.42135.972489050924' target='excel-direct.42135.972832893516'>
      <column-mapping>
        <map key='[excel-direct.42135.972489050924].[none:Abbrev:nk]' value='[excel-direct.42135.972832893516].[none:variable:nk]' />
      </column-mapping>
    </datasource-relationship>
  </datasource-relationships>
  <worksheets>
    <worksheet name='Sheet 1'>
      <table>
        <view>
          <datasources>
            <datasource caption='deaths (deaths)' name='excel-direct.42135.972832893516' />
            <datasource caption='Sheet1 (death_codes.csv)' name='excel-direct.42135.972489050924' />
          </datasources>
          <datasource-dependencies datasource='excel-direct.42135.972489050924'>
            <column datatype='string' name='[Abbrev]' role='dimension' type='nominal'>
            </column>
            <column datatype='string' name='[Label]' role='dimension' type='nominal'>
            </column>
            <column-instance column='[Label]' derivation='None' name='[none:Label:nk]' pivot='key' type='nominal' />
          </datasource-dependencies>
          <datasource-dependencies datasource='excel-direct.42135.972832893516'>
            <column-instance column='[variable]' derivation='None' name='[none:variable:nk]' pivot='key' type='nominal' />
            <column-instance column='[zip_code]' derivation='None' name='[none:zip_code:ok]' pivot='key' type='ordinal' />
            <column-instance column='[value]' derivation='Sum' name='[rank:sum:value:qk:7]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[excel-direct.42135.972832893516].[variable]' ordering-type='Field' rank-options='Unique,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[value]' derivation='Sum' name='[rank:sum:value:qk]' pivot='key' type='quantitative'>
              <table-calc ordering-type='Field' rank-options='Unique,Descending' type='Rank'>
                <order field='[excel-direct.42135.972832893516].[variable]' />
                <order field='[excel-direct.42135.972489050924].[Label]' />
              </table-calc>
            </column-instance>
            <column-instance column='[value]' derivation='Sum' name='[sum:value:qk]' pivot='key' type='quantitative' />
            <column caption='Value' datatype='integer' name='[value]' role='measure' type='quantitative'>
            </column>
            <column caption='Variable' datatype='string' name='[variable]' role='dimension' type='nominal'>
            </column>
            <column caption='Zip Code' datatype='integer' default-format='*00000' name='[zip_code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal'>
            </column>
          </datasource-dependencies>
          <filter class='categorical' column='[excel-direct.42135.972832893516].[none:variable:nk]'>
            <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:variable:nk]' member='&quot;ALZ&quot;' />
              <groupfilter function='member' level='[none:variable:nk]' member='&quot;CAN&quot;' />
              <groupfilter function='member' level='[none:variable:nk]' member='&quot;CLD&quot;' />
              <groupfilter function='member' level='[none:variable:nk]' member='&quot;DIA&quot;' />
              <groupfilter function='member' level='[none:variable:nk]' member='&quot;HTD&quot;' />
              <groupfilter function='member' level='[none:variable:nk]' member='&quot;HYP&quot;' />
              <groupfilter function='member' level='[none:variable:nk]' member='&quot;INJ&quot;' />
              <groupfilter function='member' level='[none:variable:nk]' member='&quot;LIV&quot;' />
              <groupfilter function='member' level='[none:variable:nk]' member='&quot;NEP&quot;' />
              <groupfilter function='member' level='[none:variable:nk]' member='&quot;OTH&quot;' />
              <groupfilter function='member' level='[none:variable:nk]' member='&quot;PNF&quot;' />
              <groupfilter function='member' level='[none:variable:nk]' member='&quot;STK&quot;' />
              <groupfilter function='member' level='[none:variable:nk]' member='&quot;SUI&quot;' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[excel-direct.42135.972832893516].[rank:sum:value:qk:7]' included-values='all'>
          </filter>
          <filter class='quantitative' column='[excel-direct.42135.972832893516].[rank:sum:value:qk]' included-values='in-range'>
            <min>1</min>
            <max>1</max>
          </filter>
          <slices>
            <column>[excel-direct.42135.972832893516].[none:variable:nk]</column>
            <column>[excel-direct.42135.972832893516].[rank:sum:value:qk]</column>
            <column>[excel-direct.42135.972832893516].[rank:sum:value:qk:7]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='mark'>
            <encoding attr='color' field='[excel-direct.42135.972832893516].[rank:sum:value:qk:7]' palette='tableau-red-green' reverse='true' type='interpolated' />
            <encoding attr='color' field='[excel-direct.42135.972832893516].[rank:sum:value:qk]' palette='tableau-red-green' reverse='true' type='interpolated' />
            <encoding attr='color' center='68.0' field='[excel-direct.42135.972832893516].[sum:value:qk]' max='349' min='1' palette='tableau-green-blue' reverse='true' type='interpolated' />
          </style-rule>
          <style-rule element='map-layer'>
            <format attr='enabled' id='tab_base' value='true' />
            <format attr='enabled' id='um_lcover' value='true' />
            <format attr='enabled' id='tab_coastline' value='false' />
            <format attr='enabled' id='pp2_line' value='false' />
            <format attr='enabled' id='light_adm0_bnd' value='false' />
            <format attr='enabled' id='light_adm0_lbl' value='false' />
            <format attr='enabled' id='um_adm0_bnd' value='true' />
            <format attr='enabled' id='um_adm0_lbl' value='true' />
            <format attr='enabled' id='light_pp2_statebounds' value='false' />
            <format attr='enabled' id='light_pp2_statelabels' value='false' />
            <format attr='enabled' id='pp2_adminlabels' value='false' />
            <format attr='enabled' id='pp2_statebounds' value='true' />
            <format attr='enabled' id='pp2_statelabels' value='true' />
            <format attr='enabled' id='countybounds' value='false' />
            <format attr='enabled' id='countylabels' value='false' />
            <format attr='enabled' id='zipbounds' value='false' />
            <format attr='enabled' id='ziplabels' value='false' />
            <format attr='enabled' id='tab_areabounds' value='false' />
            <format attr='enabled' id='tab_arealabels' value='false' />
            <format attr='enabled' id='tab_msabounds' value='false' />
            <format attr='enabled' id='tab_msalabels' value='false' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[excel-direct.42135.972832893516].[sum:value:qk]' />
              <text column='[excel-direct.42135.972832893516].[sum:value:qk]' />
              <lod column='[excel-direct.42135.972832893516].[rank:sum:value:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([excel-direct.42135.972832893516].[none:zip_code:ok] / ([excel-direct.42135.972832893516].[none:variable:nk] / [excel-direct.42135.972489050924].[none:Label:nk]))</rows>
        <cols>[excel-direct.42135.972832893516].[sum:value:qk]</cols>
        <join-lod-include-overrides>
          <column>[excel-direct.42135.972489050924].[Abbrev]</column>
        </join-lod-include-overrides>
      </table>
    </worksheet>
  </worksheets>
  <windows>
    <window class='schema' source-height='-1' />
    <window auto-hidden='0' class='worksheet' maximized='1' name='Sheet 1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card param='[excel-direct.42135.972832893516].[rank:sum:value:qk]' show-null-ctrls='false' type='filter' />
            <card pane-specification-id='0' param='[excel-direct.42135.972832893516].[sum:value:qk]' type='color' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='31'>
            <card type='columns' />
          </strip>
          <strip size='31'>
            <card type='rows' />
          </strip>
        </edge>
      </cards>
      <highlight>
        <color-one-way>
          <field>[excel-direct.42135.954879247685].[none:variable:nk]</field>
          <field>[excel-direct.42135.954879247685].[none:zip_code:ok]</field>
          <field>[excel-direct.42135.972489050924].[none:Label:nk]</field>
          <field>[excel-direct.42135.972832893516].[none:variable:nk]</field>
          <field>[excel-direct.42135.972832893516].[none:zip_code:ok]</field>
        </color-one-way>
      </highlight>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 1' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
